name: Version type determination
description: |
  Determine the version type of the build.

inputs:
  ROOT_REPOSITORY:
    description: |
      The root repository name matching 'github.repository'.
    required: true

outputs:
  VERSION_TYPE:
    description: |
      The type of the build (release, development, artifact).
    value: ${{ steps.version_type.outputs.version_type }}

runs:
  using: composite
  steps:
    - name: Check whether the version type is a release
      if: "startsWith(github.ref,'refs/tags/v')"
      shell: bash --noprofile --norc -euo pipefail {0}
      run: |
        if [ ${{ github.repository }} != ${{ inputs.ROOT_REPOSITORY }} ]; then
          echo "Version tags are not allowed in forks!"
          exit 1
        fi
        echo "VERSION_TYPE=release" >> $GITHUB_ENV

    - name: Check whether the version type is an development build
      if: "github.repository == inputs.ROOT_REPOSITORY && ( github.ref == 'refs/heads/main' || startsWith(github.ref,'refs/heads/main_v') )"
      shell: bash --noprofile --norc -euo pipefail {0}
      run: |
        echo "VERSION_TYPE=development" >> $GITHUB_ENV

    - name: Check whether the version type is an artifact build
      if: "github.repository != inputs.ROOT_REPOSITORY || env.VERSION_TYPE == ''"
      shell: bash --noprofile --norc -euo pipefail {0}
      run: |
        echo "VERSION_TYPE=artifact" >> $GITHUB_ENV

    - name: Save version type to output
      id: version_type
      shell: bash --noprofile --norc -euo pipefail {0}
      run: |
        echo "VERSION_TYPE=$VERSION_TYPE" >> $GITHUB_OUTPUT
